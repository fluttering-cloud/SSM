Swagger的功能

 1.生成api文档：
   @APi（“XXX”）:Swagger内的一个总标签，标记后接口信息或者实体类信息被Swagger扫描后会显示XXX,
   通俗说就是在Swagger内给实体类加注释

   @ApiModel（“XXX”）:用在实体类上，效果同上,同时这个类在Swagger文档内的名字为XXX,
     通俗说就是在Swagger内给实体类加注释

   @ApiModelProperty:用在实体类的属性上，效果同上

 2.提供简单的在线测试，可以找出api的错误

 3.Swagger只能在生产的时候用，在发布前要关闭


swagger的使用
   1.导入依赖
      springfox-swagger-ui: swagger文档主页的依赖
      springfox-swagger2 : swagger依赖

   2.编写swagger的配置类
     2.1 Docket实例，这是swagger的核心实例，其中有几个重要方法
        2.1.1 .groupName（“组名”） : 用于多人协同开发时的文档分组。多人开发时，在swagger主页的搜索
               框内输入组名，就可以查看相应开发者的api信息了
        2.1.2 .apiInfo(apiInfo())  : 参数是一个 ApiInfo 对象，这个对象用于设置文档的作者、版本、
               链接等基础信息
        2.1.3 .select().apis(RequestHandlerSelectors.basePackage("api的全路径"))，这个方法
              用于指定swagger要扫描的api,被扫描到的api就可以在swagger的主页内显示相关信息
        2.1.4 .build() : 即用工厂模式构造这个docket对象
        2.1.5 注意：这几个方法是链式的

     2.2.编写获取 ApiInfo 对象的方法，用于Docket设置api的基本信息
        2.2.1 创建一个 Contact 对象，用于封装文档的作者名称、链接（链接跳转的内容由作者决定，就算你想跳转
              到百度都行）、邮箱
        2.2.2 返回一个文档对象，即return new  ApiInfo("文档的名称",“作者铭言”,"版本号","服务期限链接",Contact对象,"许可证"
        ,"许可证链接",new ArrayList())
